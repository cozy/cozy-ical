// Generated by CoffeeScript 1.4.0
(function() {
  var moment, time;

  time = require('time');

  moment = require('moment');

  module.exports = function(Alarm) {
    var VAlarm, VCalendar, VTimezone, VTodo, _ref;
    _ref = require('./index'), VCalendar = _ref.VCalendar, VTodo = _ref.VTodo, VAlarm = _ref.VAlarm, VTimezone = _ref.VTimezone;
    Alarm.getICalCalendar = function() {
      var calendar;
      return calendar = new VCalendar('Cozy Cloud', 'Cozy Agenda');
    };
    Alarm.prototype.timezoneToIcal = function() {
      var date, vtimezone;
      date = new time.Date(this.trigg);
      vtimezone = new VTimezone(date, this.timezone);
      return vtimezone;
    };
    Alarm.prototype.toIcal = function(timezone) {
      var date, vtodo;
      date = new time.Date(this.trigg);
      date.setTimezone(timezone, false);
      vtodo = new VTodo(date, this.id, this.description);
      vtodo.addAlarm(date);
      return vtodo;
    };
    Alarm.fromIcal = function(valarm, timezone) {
      var alarm, date, triggerDate;
      if (timezone == null) {
        timezone = "UTC";
      }
      alarm = new Alarm();
      alarm.description = valarm.fields["SUMMARY"];
      date = valarm.fields["DTSTAMP"];
      date = moment(date, "YYYYMMDDTHHmm00");
      triggerDate = new time.Date(new Date(date), timezone);
      alarm.trigg = triggerDate.toString().slice(0, 24);
      alarm.timezone = timezone;
      return alarm;
    };
    return Alarm.extractAlarms = function(component, timezone) {
      var alarms;
      alarms = [];
      component.walk(function(component) {
        if (component.name === 'VTIMEZONE') {
          timezone = component.fields["TZID"];
        }
        if (component.name === 'VTODO') {
          return alarms.push(Alarm.fromIcal(component, timezone));
        }
      });
      return alarms;
    };
  };

}).call(this);
